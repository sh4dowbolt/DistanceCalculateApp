services:
  mysql-db:
    image: bitnami/mysql:8.0
    container_name: mysql-dev
    env_file:
      - .env
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/bitnami/mysql
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  app:
    build: .
    container_name: route-app
    depends_on:
      mysql-db:
        condition: service_healthy
    env_file:
      - .env
    environment:
      #Database Configuration
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-db:3306/${MYSQL_DATABASE}
      - SPRING_DATASOURCE_USERNAME=${MYSQL_USER}
      - SPRING_DATASOURCE_PASSWORD=${MYSQL_PASSWORD}
      # DaData API Configuration
      - DADATA_API_KEY=${DADATA_API_KEY}
      - DADATA_SECRET_KEY=${DADATA_SECRET_KEY}
      - DADATA_URL=https://cleaner.dadata.ru/api/v1/clean/address
      # Yandex API Configuration
      - YANDEX_API_KEY=${YANDEX_API_KEY}
      - YANDEX_URL=https://geocode-maps.yandex.ru/v1/
    ports:
      - "8080:8080"
    networks:
      - app-network
    restart: unless-stopped

networks:
  app-network:
    name: app-network
    driver: bridge
volumes:
  mysql_data:
    name: mysql_data